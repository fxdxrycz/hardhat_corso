import { ethers } from "hardhat";

async function main() {


  const ShopAttackerFactory = await ethers.getContractFactory("ShopAttacker");
  const ShopAttacker = await ShopAttackerFactory.deploy();

  await ShopAttacker.deployed();

  console.log(
    `ShopAttacker deployed to ${ShopAttacker.address}`
  );

  const signers = await ethers.getSigners();
  const signer = signers[0];
  const player =  await signer.getAddress()
  console.log("Using signer with address:", player);

  const shopAddr = "0x9308fF66bfa53c690d6d73a1e2d73472837471E5"
  const tx = await ShopAttacker.attack(shopAddr);
  await tx.wait();
  console.log("Transaction hash:", tx.hash);
}

// We recommend this pattern to be able to use async/await everywhere
// and properly handle errors.
main().catch((error) => {
  console.error(error);
  process.exitCode = 1;
});
